name: Compile changes

on:
  push:
    branches-ignore: 'main'
  pull_request:
    branches-ignore: 'main'

env:
  CARGO_TERM_COLOR: always

jobs:
  compile:
    name: Compile for ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - name: linux
            os: ubuntu-latest
            artifact_name: target/debug/legion-kb-rgb
            asset_name: legion-kb-rgb-linux
          - name: windows
            os: windows-latest
            artifact_name: target/debug/legion-kb-rgb.exe
            asset_name: legion-kb-rgb-windows

    steps:
      - uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
      - name: Set VCPKG_ROOT
        run: echo "VCPKG_ROOT=$(echo $VCPKG_INSTALLATION_ROOT)" >> $GITHUB_ENV
        shell: bash
      - name: Download dependencies
        run: |
          if [ "$RUNNER_OS" == "Linux" ]; then
           sudo apt-get update && sudo apt-get install -y libx11-dev nasm libdbus-1-dev libusb-1.0-0-dev
           vcpkg update && vcpkg install libvpx libyuv
          elif [ "$RUNNER_OS" == "macOS" ]; then
           brew install nasm ninja
           vcpkg update && vcpkg install libvpx libyuv
          elif [ "$RUNNER_OS" == "Windows" ]; then
           choco install ninja
           vcpkg update && vcpkg install libvpx:x64-windows-static libyuv:x64-windows-static
          fi
        shell: bash
      - uses: actions/checkout@v2
      - name: Build
        shell: cmd
        run: |
          set PATH=C:\msys64\mingw64\bin;%PATH%
          cargo build --verbose
        if: matrix.os == 'windows-latest'
      - name: Build
        shell: bash
        run: cargo build --verbose
        if: matrix.os != 'windows-latest'
      - name: Upload artifacts
        uses: actions/upload-artifact@v2
        with:
          name: ${{ matrix.asset_name }}
          path: ${{ matrix.artifact_name }}
